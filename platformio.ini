#
# Project Configuration File
#
# A detailed documentation with the EXAMPLES is located here:
# http://docs.platformio.org/en/latest/projectconf.html
#
[platformio]
data_dir = webfiles

[common]
monitor_baud = 115200
build_flags = -fstack-usage -Wall -Werror
lib_deps_common =
  https://github.com/ttlappalainen/NMEA2000#b5426b3
  https://github.com/bblanchon/ArduinoJson#126f7ab
lib_deps_teensy =
  Encoder
  Time
  https://github.com/pedvide/ADC#6663acd
  https://github.com/ttlappalainen/FlexCAN_Library#1e0b1a8
  https://github.com/sarfata/NMEA2000_Teensy#4661d8a
  https://github.com/greiman/SdFat#18905d7
  https://github.com/blackketter/ILI9341_t3#94ca23a

[env:host]
src_filter = +<common/*>,+<host/*>
build_flags =
    ${common.build_flags} -Isrc/common -Isrc/host
    -DSERIAL1_RX_BUFFER_SIZE=512 -DSERIAL1_TX_BUFFER_SIZE=512
    -DSERIAL2_RX_BUFFER_SIZE=256 -DSERIAL2_TX_BUFFER_SIZE=256
    -DSERIAL3_RX_BUFFER_SIZE=256 -DSERIAL3_TX_BUFFER_SIZE=256
platform = teensy
framework = arduino
board = teensy36
lib_deps =
  ${common.lib_deps_common}
  ${common.lib_deps_teensy}
extra_scripts = tools/platformio_cfg_gitversion.py
# uncomment to get seatalk support
#build_flags = ${common.build_flags} -DSERIAL_9BIT_SUPPORT -DSEATALK
# or uncomment this to send all debugging to NMEA2 instead of USB
#build_flags = ${common.build_flags} -DDebugSerial=Serial3
#build_flags = -DDebugSerial=Serial3
# To disable size optimization
#build_unflags = -Os

# This configuration builds a very simple firmware for the host that allows to upload
# a firmware to the ESP8266 module.
[env:program-esp]
src_filter = +<common/*>, +<program-esp/*>, +<host/esp-programmer/>
build_flags = ${common.build_flags} -Isrc/common
platform  = teensy
framework = arduino
board = teensy31
lib_ldf_mode = deep
lib_deps =
  ${common.lib_deps_common}
  ${common.lib_deps_teensy}

[env:esp]
src_filter = +<common/*>,+<esp/*>
# no-strict-aliasing required here due to ESP+NMEA2000 incompatibilities
build_flags = -Wall -Wno-strict-aliasing
    -Isrc/common -Isrc/esp
    -DHAVE_STRLCPY -DHAVE_STRLCAT
platform=https://github.com/platformio/platform-espressif8266.git#feature/stage
framework = arduino
board = esp_wroom_02
extra_scripts =
  tools/platformio_cfg_esp.py
  tools/platformio_cfg_gitversion.py
lib_ldf_mode = deep
lib_ignore = NMEA2000-Teensy, FlexCAN_Library, Time
lib_deps =
  ${common.lib_deps_common}
  Adafruit NeoPixel
  elapsedMillis
  https://github.com/me-no-dev/ESPAsyncTCP#a57560d
  https://github.com/me-no-dev/ESPAsyncWebServer#63b5303

[env:mfg]
src_filter = +<common/*>, +<mfg/*>, +<host/drivers/ILI9341GC.cpp>
build_flags = ${common.build_flags} -Isrc/common
platform = teensy
framework = arduino
board = teensy31
lib_deps =
  ${common.lib_deps_common}
  ${common.lib_deps_teensy}

[env:test]
src_filter = +<common/comms/*>, +<common/nmea/*>, +<common/signalk/*>, +<common/util/*>, +<host/config/*>, +<test/*>
build_flags = -g -O0 --coverage -Wall -Werror -std=c++11 -Isrc/common -Isrc/test/arduinomock -I src/test/teensyheaders -DKBOX_TESTS
platform = native
lib_deps =
  ${common.lib_deps_common}
lib_ignore = elapsedMillis, NMEA2000_teensy, Time
# Helps platformio who otherwise chokes on ArduinoJson header only style
lib_archive = false
extra_scripts = tools/platformio_cfg_test.py, tools/platformio_cfg_bsdstring.py


[env:sktool]
src_filter = +<sktool/*>, +<common/nmea/*>, +<common/signalk/*>, +<common/util/*>, +<test/teensy_compat.c>, +<test/arduinomock/*>
build_flags = -g -O0 -Wall -Werror -std=c++11 -Isrc/common -Isrc/test/arduinomock -Isrc/test/teensyheaders -DKBOX_TESTS
platform = native
lib_deps =
  ${common.lib_deps_common}
lib_ignore = elapsedMillis, NMEA2000_teensy, Time
# Helps platformio who otherwise chokes on ArduinoJson header only style
lib_archive = false
extra_scripts = tools/platformio_cfg_bsdstring.py
